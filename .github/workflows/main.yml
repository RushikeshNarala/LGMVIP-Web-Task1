name: Send MTAR file via SendGrid

on:
  workflow_dispatch:    # Allows manual trigger from Actions tab
  push:
    branches:
      - main            # Optional: run automatically when you push to main

jobs:
  send-mtar:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4


      - name: Install Cloud Foundry CLI
        run: |
          curl -sL "https://packages.cloudfoundry.org/stable?release=linux64-binary&version=8.8.3&source=github-rel" | tar -zx
          sudo mv cf8 /usr/local/bin
          cf8 --version

      - name: Install mbt
        run: |
          npm install -g mbt

      - name: Install MTA Plugin
        run: |
          cf8 install-plugin -f https://github.com/cloudfoundry-incubator/multiapps-cli-plugin/releases/latest/download/multiapps-plugin.linux64

      - name: Build MTA Archive
        run: mbt build -t gen --mtar mta.tar

      - name: Log into SAP Cloud Foundry
        run: |
          cf8 login -a ${{ secrets.CF_API_ENDPOINT_TEST }} \
          -o ${{ secrets.CF_ORGANIZATION_TEST }} \
          -s ${{ secrets.CF_SPACE_TEST }} \
          -u ${{ secrets.CF_USERNAME }} \
          -p ${{ secrets.CF_PASSWORD }} 

      - name: Deploy using MTA
        run: cf8 deploy gen/mta.tar -f
      # Step 1: (Optional) Build or locate your .mtar file
      # Replace this with your real mtar generation or build command
      - name: Create sample .mtar file
        run: |
          mkdir -p dist
          echo "Sample content inside mtar file" > dist/sample.txt
          tar -cvf app.mtar dist/

      # Step 2: Send .mtar file via SendGrid
      - name: Send .mtar file using SendGrid API
        env:
          SENDGRID_API_KEY: ${{ secrets.SENDGRID_API_KEY }}
          TO_EMAIL: pravallika@si6.io
          FROM_EMAIL: noreply@si6.io
        run: |
          # Encode the MTAR file as base64 (SendGrid requires this format)
          base64 app.mtar > encoded.txt
          ENCODED_CONTENT=$(cat encoded.txt)

          # Create the JSON payload for SendGrid
          cat <<EOF > payload.json
          {
            "personalizations": [
              {
                "to": [{ "email": "${TO_EMAIL}" }],
                "subject": "Automated MTAR File from GitHub Actions"
              }
            ],
            "from": { "email": "${FROM_EMAIL}" },
            "content": [
              {
                "type": "text/plain",
                "value": "Hello,\n\nPlease find attached the generated MTAR file.\n\nRegards,\nGitHub Actions"
              }
            ],
            "attachments": [
              {
                "content": "${ENCODED_CONTENT}",
                "type": "application/octet-stream",
                "filename": "app.mtar"
              }
            ]
          }
          EOF

          # Send email using SendGrid REST API
          curl -X POST "https://api.sendgrid.com/v3/mail/send" \
            -H "Authorization: Bearer ${SENDGRID_API_KEY}" \
            -H "Content-Type: application/json" \
            -d @payload.json
